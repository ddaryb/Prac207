name: Docker Image CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      # Шаг 1: Получаем код из репозитория
      - name: Checkout
        uses: actions/checkout@v4

      # Шаг 2: Автоматически сканируем зависимости Python на уязвимости
      - name: Scan Python dependencies
        uses: pyupio/safety@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          check-version: latest

      # Шаг 3: Логинимся в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Шаг 4: Собираем и сканируем Docker образ
      - name: Build and Scan
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ddary/ci-cd-project:latest
          push: true
          scan: true  # Включено автоматическое сканирование на уязвимости

      # Шаг 5: Проверяем, что контейнер запускается
      - name: Test container
        run: |
          docker run -d -p 8080:8080 --name test-container ddary/ci-cd-project:latest
          sleep 5
          curl -s http://localhost:8080 | grep "Hello, Practice202!"
          docker stop test-container